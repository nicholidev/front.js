name: release

on:
  release:
    types: [published]

jobs:
  manual:
    name: 📝 Manual Release
    if: |
      # we need to check for `nightly` refs and skip them as we dont want to double publish a version as it would fail. unfortantely even using curl and a `repository_dispatch` trigger, actions still aren't ran if a version is published using the default secrets.GITHUB_TOKEN.
      github.repository == 'remix-run/remix' &&
      !contains(github.ref, 'nightly')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - run: echo "::set-output name=version::$(cat .nvmrc)"
        id: nvmrc

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: "${{ steps.nvmrc.outputs.version }}"

      - run: echo "::set-output name=dir::$(yarn cache dir)"
        id: yarn-cache

      - name: Restore dependency cache
        uses: actions/cache@v2
        with:
          path: "${{ steps.yarn-cache.outputs.dir }}"
          key: ${{ runner.os }}-yarn-cache-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-cache-

      - name: Install dependencies
        run: yarn --frozen-lockfile

      - name: Build
        run: yarn build

      - name: Setup npm auth
        run: |
          echo "registry=https://registry.npmjs.org" >> ~/.npmrc
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" >> ~/.npmrc

      - name: Publish
        run: npm run publish

  comment:
    needs: [manual]
    name: Comment on Issues and PRs
    if: github.repository == 'remix-run/remix'
    runs-on: ubuntu-latest
    steps:
      - name: 🛴 Kick of comment and deployment test workflows
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          EVENT_TYPE: release
          REPO: remix-run/remix
          VERSION: ${{ github.ref }}
        run: |
          curl \
            -H "Authorization: token ${GITHUB_TOKEN}" \
            --request POST \
            --data '{ "event_type": "${EVENT_TYPE}", "client_payload": { "ref": "${VERSION}" } }' \
            https://api.github.com/repos/${REPO}/dispatches