name: 🕊 Release

on:
  release:
    types: [published]
  schedule:
    - cron: "0 7 * * *" # every day at 12AM PST

jobs:
  nightly:
    name: 🌒 Nightly Release
    if: github.repository == 'remix-run/remix' && github.event_name == 'schedule'
    runs-on: ubuntu-latest

    steps:
      - name: 🛑 Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1

      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3
        with:
          ref: dev
          token: ${{ secrets.NIGHTLY_PAT }}

      - name: 👀 Check for commits
        id: nightly
        run: |
          count=$(git rev-list $GITHUB_SHA..HEAD --count)
          echo "commit count $count"
          if [ "$count" -gt "0" ]; then
            echo "::set-output name=RELEASE::true"
          else
            echo "::set-output name=release::false"
          fi

      - name: ⎔ Setup node
        if: steps.nightly.ouputs.RELEASE == true
        uses: actions/setup-node@v3
        with:
          node-version-file: ".nvmrc"
          cache: "yarn"

      - name: 📥 Install deps
        if: steps.nightly.ouputs.RELEASE == true
        # even though this is called "npm-install" it does use yarn to install
        # because we have a yarn.lock and caches efficiently.
        uses: bahmutov/npm-install@v1

      - name: 🏗 Build
        if: steps.nightly.ouputs.RELEASE == true
        run: yarn build

      - name: ⤴️ Update Version
        if: steps.nightly.ouputs.RELEASE == true
        id: version
        run: |
          SHA=$(git rev-parse HEAD)
          SHORT_SHA=${SHA::7}
          NEXT_VERSION=0.0.0-nightly-${SHORT_SHA}
          echo ::set-output name=NEXT_VERSION::${NEXT_VERSION}

          git checkout -b nightly/${NEXT_VERSION}
          npm version ${NEXT_VERSION}

          git push origin --tags

      - name: 🔐 Setup npm auth
        if: steps.nightly.ouputs.RELEASE == true
        run: |
          echo "registry=https://registry.npmjs.org" >> ~/.npmrc
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" >> ~/.npmrc

      - name: 🚀 Publish
        if: steps.nightly.ouputs.RELEASE == true
        run: npm run publish

      - name: 🐱 Create GitHub release
        if: steps.nightly.ouputs.RELEASE == true
        uses: actions/create-release@v1
        with:
          draft: false
          prerelease: true
          release_name: v${{ steps.version.outputs.NEXT_VERSION }}
          tag_name: v${{ steps.version.outputs.NEXT_VERSION }}
        env:
          # need this token in order to have it trigger the comment workflow
          GITHUB_TOKEN: ${{ secrets.NIGHTLY_PAT }}

  stable:
    if: github.repository == 'remix-run/remix' && github.event.action == 'published' && github.event_name != 'schedule'
    runs-on: ubuntu-latest

    steps:
      - name: 🛑 Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1

      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: ⎔ Setup node
        uses: actions/setup-node@v3
        with:
          node-version-file: ".nvmrc"
          cache: "yarn"

      - name: 📥 Install deps
        # even though this is called "npm-install" it does use yarn to install
        # because we have a yarn.lock and caches efficiently.
        uses: bahmutov/npm-install@v1

      - name: 🏗 Build
        run: yarn build

      - name: 🔐 Setup npm auth
        run: |
          echo "registry=https://registry.npmjs.org" >> ~/.npmrc
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" >> ~/.npmrc

      - name: 🚀 Publish
        run: npm run publish

  arc_deploy:
    name: Architect Deploy
    needs: [stable]
    if: github.repository == 'remix-run/remix'
    runs-on: ubuntu-latest
    steps:
      - name: 🛑 Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1

      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: ⎔ Setup node
        uses: actions/setup-node@v3
        with:
          node-version-file: ".nvmrc"
          cache: "npm"
          cache-dependency-path: ./scripts/deployment-test/package-lock.json

      # some deployment targets require the latest version of npm
      # TODO: remove this eventually when the default version we get
      # is "latest" enough.
      - name: 📦 Install latest version of npm
        run: npm install -g npm@latest
        working-directory: ./scripts/deployment-test

      - name: 📥 Install deployment-test deps
        uses: bahmutov/npm-install@v1
        with:
          working-directory: ./scripts/deployment-test

      - name: 🚀 Deploy to Arc
        run: node ./arc.mjs
        working-directory: ./scripts/deployment-test
        env:
          CI: true
          AWS_ACCESS_KEY_ID: ${{ secrets.TEST_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.TEST_AWS_SECRET_ACCESS_KEY }}

  cf_pages_deploy:
    name: "CF Pages Deploy"
    needs: [stable]
    if: github.repository == 'remix-run/remix'
    runs-on: ubuntu-latest
    steps:
      - name: 🛑 Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1

      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: ⎔ Setup node
        uses: actions/setup-node@v3
        with:
          node-version-file: ".nvmrc"
          cache: "npm"
          cache-dependency-path: ./scripts/deployment-test/package-lock.json

      # some deployment targets require the latest version of npm
      # TODO: remove this eventually when the default version we get
      # is "latest" enough.
      - name: 📦 Install latest version of npm
        run: npm install -g npm@latest
        working-directory: ./scripts/deployment-test

      - name: 📥 Install deployment-test deps
        uses: bahmutov/npm-install@v1
        with:
          working-directory: ./scripts/deployment-test

      - name: 🚀 Deploy to Cloudflare Pages
        run: node ./cf-pages.mjs
        working-directory: ./scripts/deployment-test
        env:
          CF_ACCOUNT_ID: ${{ secrets.TEST_CF_ACCOUNT_ID }}
          CF_GLOBAL_API_KEY: ${{ secrets.TEST_CF_GLOBAL_API_KEY }}
          CF_EMAIL: ${{ secrets.TEST_CF_EMAIL }}
          GITHUB_TOKEN: ${{ secrets.TEST_CF_GITHUB_TOKEN }}

  cf_workers_deploy:
    name: "CF Workers Deploy"
    needs: [stable]
    if: github.repository == 'remix-run/remix'
    runs-on: ubuntu-latest
    steps:
      - name: 🛑 Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1

      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: ⎔ Setup node
        uses: actions/setup-node@v3
        with:
          node-version-file: ".nvmrc"
          cache: "npm"
          cache-dependency-path: ./scripts/deployment-test/package-lock.json

      # some deployment targets require the latest version of npm
      # TODO: remove this eventually when the default version we get
      # is "latest" enough.
      - name: 📦 Install latest version of npm
        run: npm install -g npm@latest
        working-directory: ./scripts/deployment-test

      - name: 📥 Install deployment-test deps
        uses: bahmutov/npm-install@v1
        with:
          working-directory: ./scripts/deployment-test

      - name: 🚀 Deploy to Cloudflare Workers
        run: node ./cf-workers.mjs
        working-directory: ./scripts/deployment-test
        env:
          CF_ACCOUNT_ID: ${{ secrets.TEST_CF_ACCOUNT_ID }}
          CF_API_TOKEN: ${{ secrets.TEST_CF_API_TOKEN }}

  fly_deploy:
    name: "Fly Deploy"
    needs: [stable]
    if: github.repository == 'remix-run/remix'
    runs-on: ubuntu-latest
    steps:
      - name: 🛑 Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1

      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: ⎔ Setup node
        uses: actions/setup-node@v3
        with:
          node-version-file: ".nvmrc"
          cache: "npm"
          cache-dependency-path: ./scripts/deployment-test/package-lock.json

      # some deployment targets require the latest version of npm
      # TODO: remove this eventually when the default version we get
      # is "latest" enough.
      - name: 📦 Install latest version of npm
        run: npm install -g npm@latest
        working-directory: ./scripts/deployment-test

      - name: 📥 Install deployment-test deps
        uses: bahmutov/npm-install@v1
        with:
          working-directory: ./scripts/deployment-test

      - name: 🎈 Install the Fly CLI
        run: curl -L https://fly.io/install.sh | FLYCTL_INSTALL=/usr/local sh

      - name: 🚀 Deploy to Fly
        run: node ./fly.mjs
        working-directory: ./scripts/deployment-test
        env:
          FLY_API_TOKEN: ${{ secrets.TEST_FLY_TOKEN }}

  netlify_deploy:
    name: "Netlify Deploy"
    needs: [stable]
    if: github.repository == 'remix-run/remix'
    runs-on: ubuntu-latest
    steps:
      - name: 🛑 Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1

      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: ⎔ Setup node
        uses: actions/setup-node@v3
        with:
          node-version-file: ".nvmrc"
          cache: "npm"
          cache-dependency-path: ./scripts/deployment-test/package-lock.json

      # some deployment targets require the latest version of npm
      # TODO: remove this eventually when the default version we get
      # is "latest" enough.
      - name: 📦 Install latest version of npm
        run: npm install -g npm@latest
        working-directory: ./scripts/deployment-test

      - name: 📥 Install deployment-test deps
        uses: bahmutov/npm-install@v1
        with:
          working-directory: ./scripts/deployment-test

      - name: 🚀 Deploy to Netlify
        run: node ./netlify.mjs
        working-directory: ./scripts/deployment-test
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.TEST_NETLIFY_TOKEN }}

  vercel_deploy:
    name: "Vercel Deploy"
    needs: [stable]
    if: github.repository == 'remix-run/remix'
    runs-on: ubuntu-latest
    steps:
      - name: 🛑 Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1

      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: ⎔ Setup node
        uses: actions/setup-node@v3
        with:
          node-version-file: ".nvmrc"
          cache: "npm"
          cache-dependency-path: ./scripts/deployment-test/package-lock.json

      # some deployment targets require the latest version of npm
      # TODO: remove this eventually when the default version we get
      # is "latest" enough.
      - name: 📦 Install latest version of npm
        run: npm install -g npm@latest
        working-directory: ./scripts/deployment-test

      - name: 📥 Install deployment-test deps
        uses: bahmutov/npm-install@v1
        with:
          working-directory: ./scripts/deployment-test

      - name: 🚀 Deploy to Vercel
        run: node ./vercel.mjs
        working-directory: ./scripts/deployment-test
        env:
          VERCEL_TOKEN: ${{ secrets.TEST_VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.TEST_VERCEL_USER_ID }}
