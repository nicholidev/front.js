name: 🌒 Nightly Release

on:
  schedule:
    - cron: "0 7 * * *" # every day at 12AM PST

jobs:
  nightly:
    name: 🌒 Nightly Release
    if: github.repository == 'remix-run/remix'
    runs-on: ubuntu-latest
    outputs:
      # allows this to be used in the `comment` job below
      NEXT_VERSION: ${{ steps.version.outputs.NEXT_VERSION }}
    steps:
      - name: 🛑 Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1

      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3
        with:
          ref: dev
          # checkout using a custom token so that we can push later on
          token: ${{ secrets.NIGHTLY_PAT }}
          fetch-depth: 0

      - name: ⎔ Setup node
        uses: actions/setup-node@v3
        with:
          node-version-file: ".nvmrc"
          cache: "yarn"

      - name: 📥 Install deps
        # even though this is called "npm-install" it does use yarn to install
        # because we have a yarn.lock and caches efficiently.
        uses: bahmutov/npm-install@v1

      - name: ⤴️ Update Version
        id: version
        run: |
          git config --local user.email "hello@remix.run"
          git config --local user.name "Remix Run Bot"

          SHA=$(git rev-parse HEAD)
          SHORT_SHA=${SHA::7}
          DATE=$(date '+%Y%m%d')
          NEXT_VERSION=0.0.0-nightly-${SHORT_SHA}-${DATE}
          echo ::set-output name=NEXT_VERSION::${NEXT_VERSION}

          git checkout -b nightly/${NEXT_VERSION}

          if [ -z "$(git status --porcelain)" ]; then
            echo "✨"
          else
            echo "dirty working directory..."
            git add .
            git commit -m "dirty working directory..."
          fi

          yarn run version ${NEXT_VERSION} --skip-prompt

      - name: 🏗 Build
        run: yarn build

      - name: 🏷 Push Tag
        run: git push origin --tags

      - name: 🔐 Setup npm auth
        run: |
          echo "registry=https://registry.npmjs.org" >> ~/.npmrc
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" >> ~/.npmrc

      - name: 🚀 Publish
        run: npm run publish

      - name: 🐱 Create GitHub release
        uses: actions/create-release@v1
        with:
          draft: false
          prerelease: true
          release_name: v${{ steps.version.outputs.NEXT_VERSION }}
          tag_name: v${{ steps.version.outputs.NEXT_VERSION }}
        env:
          # need this token in order to have it trigger the comment and deployment test workflows
          GITHUB_TOKEN: ${{ secrets.NIGHTLY_PAT }}

  comment:
    needs: [nightly]
    name: 🛴 Kick off comment and deployment test workflows
    if: github.repository == 'remix-run/remix'
    runs-on: ubuntu-latest
    steps:
      - uses: peter-evans/repository-dispatch@v2
        env:
          VERSION: refs/tags/v${{ needs.nightly.outputs.NEXT_VERSION }}
        with:
          token: ${{ secrets.NIGHTLY_PAT }}
          event-type: release
          client-payload: '{ "ref": "${VERSION}" }'
